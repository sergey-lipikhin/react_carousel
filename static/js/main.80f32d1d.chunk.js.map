{"version":3,"sources":["constants/constants.ts","components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["DEFAULT_CAROUSEL_STATE","images","itemWidth","frameSize","step","animationDuration","isInfinite","Carousel","state","offset","leftLimit","handleNextClick","setState","props","infinite","rightLimit","isRightLimitReached","requestedOffset","handlePreviousClick","isLeftLimitReached","this","length","absoluteFrameSize","absoluteCarouselOffset","isPreviousButtonDisable","isNextButtonDisable","className","style","width","transform","transitionDuration","map","image","i","src","alt","type","classNames","onClick","React","Component","Form","imageCount","handleItemWidthChange","handleFrameSizeChange","handleStepChange","handleDurationChange","handleInfiniteChange","htmlFor","id","value","min","max","onChange","checked","App","event","Number","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80f32d1d.chunk.js","sourcesContent":["export const DEFAULT_CAROUSEL_STATE = {\n  images: [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ],\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  isInfinite: false,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  offset: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    offset: 0,\n  };\n\n  private readonly leftLimit = 0;\n\n  private get rightLimit() {\n    return this.props.images.length - this.props.frameSize;\n  }\n\n  private get isLeftLimitReached() {\n    return this.state.offset === this.leftLimit;\n  }\n\n  private get isRightLimitReached() {\n    return this.state.offset === this.rightLimit;\n  }\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    const rightLimit = props.images.length - props.frameSize;\n\n    if (state.offset > rightLimit) {\n      return { offset: rightLimit };\n    }\n\n    return null;\n  }\n\n  handleNextClick = () => (\n    this.setState((state) => {\n      const {\n        step,\n        infinite,\n      } = this.props;\n\n      const {\n        leftLimit,\n        rightLimit,\n        isRightLimitReached,\n      } = this;\n\n      if (infinite && isRightLimitReached) {\n        return { offset: leftLimit };\n      }\n\n      const requestedOffset = state.offset + step;\n\n      const offset = (requestedOffset > rightLimit)\n        ? rightLimit\n        : requestedOffset;\n\n      return { offset };\n    })\n  );\n\n  handlePreviousClick = () => (\n    this.setState((state) => {\n      const {\n        step,\n        infinite,\n      } = this.props;\n\n      const {\n        leftLimit,\n        rightLimit,\n        isLeftLimitReached,\n      } = this;\n\n      if (infinite && isLeftLimitReached) {\n        return { offset: rightLimit };\n      }\n\n      const requestedOffset = state.offset - step;\n\n      const offset = (requestedOffset < leftLimit)\n        ? leftLimit\n        : requestedOffset;\n\n      return { offset };\n    })\n  );\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { offset } = this.state;\n\n    const absoluteFrameSize = frameSize * itemWidth;\n    const absoluteCarouselOffset = (-1) * offset * itemWidth;\n\n    const isPreviousButtonDisable = this.isLeftLimitReached && !infinite;\n    const isNextButtonDisable = this.isRightLimitReached && !infinite;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__frame\"\n          style={{ width: `${absoluteFrameSize}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${absoluteCarouselOffset}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li className=\"Carousel__item\" key={image}>\n                <img\n                  width={`${itemWidth}`}\n                  className=\"Carousel__image\"\n                  src={image}\n                  alt={`${i}`}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__controls\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'Carousel__button',\n              {\n                'Carousel__button--disabled': isPreviousButtonDisable,\n              },\n            )}\n            onClick={this.handlePreviousClick}\n          >\n            &#8592;\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className={classNames(\n              'Carousel__button',\n              {\n                'Carousel__button--disabled': isNextButtonDisable,\n              },\n            )}\n            onClick={this.handleNextClick}\n          >\n            &#8594;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { InputChangeCallback } from '../../types/InputChangeCallback';\n\ntype Props = {\n  imageCount: number;\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  isInfinite: boolean;\n  handleItemWidthChange: InputChangeCallback;\n  handleFrameSizeChange: InputChangeCallback;\n  handleStepChange: InputChangeCallback;\n  handleDurationChange: InputChangeCallback;\n  handleInfiniteChange: InputChangeCallback;\n};\n\nexport const Form: React.FC<Props> = (props) => {\n  const {\n    imageCount,\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n    isInfinite,\n    handleItemWidthChange,\n    handleFrameSizeChange,\n    handleStepChange,\n    handleDurationChange,\n    handleInfiniteChange,\n  } = props;\n\n  return (\n    <form className=\"form\">\n      <label htmlFor=\"itemId\" className=\"form__field\">\n        ItemWidth\n        <input\n          type=\"number\"\n          className=\"form__input\"\n          id=\"itemId\"\n          value={itemWidth}\n          min={1}\n          max={800}\n          onChange={handleItemWidthChange}\n        />\n      </label>\n\n      <label htmlFor=\"frameId\" className=\"form__field\">\n        FrameSize\n        <input\n          type=\"number\"\n          className=\"form__input\"\n          id=\"frameId\"\n          value={frameSize}\n          min={1}\n          max={imageCount}\n          onChange={handleFrameSizeChange}\n        />\n      </label>\n\n      <label htmlFor=\"stepId\" className=\"form__field\">\n        Step\n        <input\n          type=\"number\"\n          className=\"form__input\"\n          id=\"stepId\"\n          value={step}\n          min={1}\n          max={imageCount}\n          onChange={handleStepChange}\n        />\n      </label>\n\n      <label htmlFor=\"DurationId\" className=\"form__field\">\n        Duration\n        <input\n          type=\"number\"\n          className=\"form__input\"\n          id=\"DurationId\"\n          value={animationDuration}\n          min={50}\n          onChange={handleDurationChange}\n        />\n      </label>\n\n      <label htmlFor=\"InfiniteId\" className=\"form__field\">\n        Is infinite?\n        <input\n          type=\"checkbox\"\n          className=\"form__input\"\n          id=\"InfiniteId\"\n          checked={isInfinite}\n          onChange={handleInfiniteChange}\n        />\n      </label>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { DEFAULT_CAROUSEL_STATE } from './constants/constants';\n\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\nimport { InputChangeCallback } from './types/InputChangeCallback';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  isInfinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = DEFAULT_CAROUSEL_STATE;\n\n  handleItemWidthChange: InputChangeCallback = (event) => {\n    this.setState({ itemWidth: Number(event.target.value) });\n  };\n\n  handleFrameSizeChange: InputChangeCallback = (event) => {\n    this.setState({ frameSize: Number(event.target.value) });\n  };\n\n  handleStepChange: InputChangeCallback = (event) => {\n    this.setState({ step: Number(event.target.value) });\n  };\n\n  handleDurationChange: InputChangeCallback = (event) => {\n    this.setState({ animationDuration: Number(event.target.value) });\n  };\n\n  handleInfiniteChange: InputChangeCallback = (event) => {\n    this.setState({ isInfinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      isInfinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\" data-cy=\"title\">\n        <div className=\"App__content\">\n          <h1>\n            {`Carousel with ${images.length} images`}\n          </h1>\n\n          <div className=\"App__carousel\">\n            <Carousel\n              images={images}\n              step={step}\n              frameSize={frameSize}\n              itemWidth={itemWidth}\n              animationDuration={animationDuration}\n              infinite={isInfinite}\n            />\n          </div>\n\n          <Form\n            imageCount={images.length}\n            itemWidth={itemWidth}\n            frameSize={frameSize}\n            step={step}\n            animationDuration={animationDuration}\n            isInfinite={isInfinite}\n            handleItemWidthChange={this.handleItemWidthChange}\n            handleFrameSizeChange={this.handleFrameSizeChange}\n            handleStepChange={this.handleStepChange}\n            handleDurationChange={this.handleDurationChange}\n            handleInfiniteChange={this.handleInfiniteChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './reset.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}