{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","offset","leftLimit","handleNextClick","setState","props","step","infinite","rightLimit","isRightLimitReached","requestedOffset","handlePreviousClick","isLeftLimitReached","this","images","length","frameSize","itemWidth","animationDuration","isPreviousButtonDisable","isNextButtonDisable","className","style","width","transform","transitionDuration","map","image","i","src","alt","type","classNames","onClick","React","Component","App","isInfinite","handleItemWidthChange","event","Number","target","value","handleFrameSizeChange","handleStepChange","handleDurationChange","handleInfiniteChange","checked","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bc3c7dc.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  offset: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    offset: 0,\n  };\n\n  private readonly leftLimit = 0;\n\n  private get rightLimit() {\n    return this.props.images.length - this.props.frameSize;\n  }\n\n  private get isLeftLimitReached() {\n    return this.state.offset === this.leftLimit;\n  }\n\n  private get isRightLimitReached() {\n    return this.state.offset === this.rightLimit;\n  }\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    const rightLimit = props.images.length - props.frameSize;\n\n    if (state.offset > rightLimit) {\n      return { offset: rightLimit };\n    }\n\n    return null;\n  }\n\n  handleNextClick = () => (\n    this.setState((state) => {\n      const {\n        step,\n        infinite,\n      } = this.props;\n\n      const {\n        leftLimit,\n        rightLimit,\n        isRightLimitReached,\n      } = this;\n\n      if (infinite && isRightLimitReached) {\n        return { offset: leftLimit };\n      }\n\n      const requestedOffset = state.offset + step;\n\n      const offset = (requestedOffset > rightLimit)\n        ? rightLimit\n        : requestedOffset;\n\n      return { offset };\n    })\n  );\n\n  handlePreviousClick = () => (\n    this.setState((state) => {\n      const {\n        step,\n        infinite,\n      } = this.props;\n\n      const {\n        leftLimit,\n        rightLimit,\n        isLeftLimitReached,\n      } = this;\n\n      if (infinite && isLeftLimitReached) {\n        return { offset: rightLimit };\n      }\n\n      const requestedOffset = state.offset - step;\n\n      const offset = (requestedOffset < leftLimit)\n        ? leftLimit\n        : requestedOffset;\n\n      return { offset };\n    })\n  );\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { offset } = this.state;\n\n    const isPreviousButtonDisable = this.isLeftLimitReached && !infinite;\n    const isNextButtonDisable = this.isRightLimitReached && !infinite;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__frame\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${(-1) * offset * itemWidth}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li className=\"Carousel__item\" key={image}>\n                <img\n                  width={`${itemWidth}`}\n                  className=\"Carousel__image\"\n                  src={image}\n                  alt={`${i}`}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__controls\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'Carousel__button',\n              {\n                'Carousel__button--disabled': isPreviousButtonDisable,\n              },\n            )}\n            onClick={this.handlePreviousClick}\n          >\n            &#8592;\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className={classNames(\n              'Carousel__button',\n              {\n                'Carousel__button--disabled': isNextButtonDisable,\n              },\n            )}\n            onClick={this.handleNextClick}\n          >\n            &#8594;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  isInfinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    isInfinite: false,\n  };\n\n  handleItemWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: Number(event.target.value) });\n  };\n\n  handleFrameSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: Number(event.target.value) });\n  };\n\n  handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: Number(event.target.value) });\n  };\n\n  handleDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: Number(event.target.value) });\n  };\n\n  handleInfiniteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ isInfinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      isInfinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\" data-cy=\"title\">\n        {/* eslint-disable-next-line */}\n        <div className=\"App__content\">\n          <h1>\n            {`Carousel with ${images.length} images`}\n          </h1>\n          <div className=\"App__carousel\">\n            <Carousel\n              images={images}\n              step={step}\n              frameSize={frameSize}\n              itemWidth={itemWidth}\n              animationDuration={animationDuration}\n              infinite={isInfinite}\n            />\n          </div>\n          <form className=\"form\">\n            <label htmlFor=\"itemId\" className=\"form__field\">\n              ItemWidth\n              <input\n                type=\"number\"\n                className=\"form__input\"\n                id=\"itemId\"\n                value={itemWidth}\n                min={0}\n                max={800}\n                onChange={this.handleItemWidthChange}\n              />\n            </label>\n\n            <label htmlFor=\"frameId\" className=\"form__field\">\n              FrameSize\n              <input\n                type=\"number\"\n                className=\"form__input\"\n                id=\"frameId\"\n                value={frameSize}\n                min={0}\n                max={images.length}\n                onChange={this.handleFrameSizeChange}\n              />\n            </label>\n\n            <label htmlFor=\"stepId\" className=\"form__field\">\n              Step\n              <input\n                type=\"number\"\n                className=\"form__input\"\n                id=\"stepId\"\n                value={step}\n                min={0}\n                max={images.length}\n                onChange={this.handleStepChange}\n              />\n            </label>\n\n            <label htmlFor=\"DurationId\" className=\"form__field\">\n              Duration\n              <input\n                type=\"number\"\n                className=\"form__input\"\n                id=\"DurationId\"\n                value={animationDuration}\n                min={0}\n                onChange={this.handleDurationChange}\n              />\n            </label>\n\n            <label htmlFor=\"InfiniteId\" className=\"form__field\">\n              Is infinite?\n              <input\n                type=\"checkbox\"\n                className=\"form__input\"\n                id=\"InfiniteId\"\n                checked={isInfinite}\n                onChange={this.handleInfiniteChange}\n              />\n            </label>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}